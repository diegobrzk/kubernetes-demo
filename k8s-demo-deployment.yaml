apiVersion: v1
kind: Namespace
metadata:
  name: demo

---

# This is a simple example of using a config map to create a single page static site.
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-demo-configmap
  namespace: demo
  labels:
    app: k8s-demo
data:
  # When the config map is mounted as a volume, these will be created as files.
  config.properties: |-
    valor=configmap



---
apiVersion: apps/v1
# type of file (Deployment will create the containers with the desired image)
kind: Deployment
metadata:
  name: k8s-demo-deployment
  namespace: demo
  labels:
    app: k8s-demo
spec:
  # number of instances
  replicas: 3
  selector:
    matchLabels:
      app: k8s-demo
  template:
    metadata:
      labels:
        app: k8s-demo
    spec:
      # containers definition
      containers:
        - name: k8s-demo
          image: k8s-demo:latest
          # define that it should not try to pull the image
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: demo-config
              mountPath: /conf
          env:
            - name: node
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      volumes:
        - name: demo-config
          configMap:
            name: k8s-demo-configmap

---

apiVersion: v1
# define the rule that will be used for network communication (TCP)
kind: Service
metadata:
  name: k8s-demo-service
  namespace: demo
  labels:
    app: k8s-demo
spec:
  ports:
      # my host local port
    - nodePort: 30000
      port: 8080
      protocol: TCP
      # target port on kubernetes
      targetPort: 8080
  selector:
    app: k8s-demo
  type: NodePort